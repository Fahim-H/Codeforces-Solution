//https://codeforces.com/contest/776/problem/B

#include <bits/stdc++.h>
#define optimize() ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define endl '\n'
#define mod 10000007

using namespace std;

#include <ext/pb_ds/assoc_container.hpp>
using namespace __gnu_pbds;
typedef long long int ll;
typedef tree< ll, null_type, less_equal<ll>, rb_tree_tag, tree_order_statistics_node_update > ordered_set;
/// cout<<*X.find_by_order(1)<<endl; // finds the kth element
/// cout<<X.order_of_key(-5)<<endl;  // number of items in a set that are strictly smaller than our item

const int MAX = 1e5+10;
vector <int> primes;
bitset<MAX> isPrime;

void sieve(){
    for(int i=3; i<=MAX; i += 2)isPrime[i]=true;
    isPrime[2] = true;
    //int lim = sqrt(MAX);
    for(int i=3; i*i<=MAX; i+=2){
        if(isPrime[i]){
            for(int j=i*i; j<=MAX; j+=i){
                isPrime[j]=false;
            }
        }
    }
    primes.push_back(2);
    for(int i=3; i<=MAX; i+=2)if(isPrime[i])primes.push_back(i);
}


int main(){
    optimize();
    sieve();

    int n; cin>>n;
    (n == 1 || n == 2 ) ? cout<<1<<endl : cout<<2<<endl;

    for(int i=2; i<=n+1; i++){
        if(isPrime[i])cout<<1<<" ";
        else cout<<2<<" ";
    }
    cout<<endl;
    return 0;
}
